spring:
    application:
        name: thing
    profiles:
        active: prod
    config:
        import: optional:configserver:http://config-server:8071
    cloud:
        config:
            retry:
                max-attempts: 50
                initial-interval: 1500
                multiplier: 1.5
                max-interval: 20000


resilience4j:
  circuitbreaker:
    instances:
      thingService:
        failure-rate-threshold: 5  #The Threshold Percentage Above Which the Circuit Breaker will move from Closed to Open State.
        wait-duration-in-open-state: 50000  #Time in milliseconds, in which the circuit breaker is to stay in open state before moving to half-open state
        permitted-number-of-calls-in-half-open-state: 10
        minimum-number-of-calls: 5  #The number of calls after which the error rate is calculated. I have assigned it with a small value for test purpose.
#  ratelimiter:
#    instances:
#      thingService:
#        limit-refresh-period: 200ns
#        limit-for-period: 40 #The Max number of calls that can be done in the time specified by limit-refresh-period
#        timeout-duration: 3s # The max amount of time a call can last
#  thread-pool-bulkhead:
#    instances:
#      thingService:
#        queue-capacity: 2 #The number of calls which can be queued if the thread pool is saturated
#        core-thread-pool-size: 4 #The Number of available threads in the Thread Pool.
#  timelimiter:
#    instances:
#      thingService:
#        timeout-duration: 2s # The max amount of time a call can last
#        cancel-running-future: false #do not cancel the Running Completable Futures After TimeOut.
#  retry:
#    instances:
#      thingService:
#        max-attempts: 3
#        wait-duration: 1s # After this time, the call will be considered a failure and will be retried
#        retry-exceptions: #The List Of Exceptions That Will Trigger a Retry
#          - java.lang.RuntimeException
#          - java.io.IOException




